import discord
from discord.ext import commands
from discord import app_commands
from config import POLLINATIONS_BOT_TOKEN
import requests
import time
import urllib.parse
import os
import random
from datetime import datetime, timedelta

# Danh s√°ch c√°c model h·ª£p l·ªá
VALID_MODELS = [
    "flux",
    "flux-realism",
    "flux-cablyai",
    "flux-anime",
    "flux-3d",
    "any-dark",
    "flux-pro",
    "turbo"
]

# C√†i ƒë·∫∑t intents
intents = discord.Intents.default()
intents.message_content = True
intents.members = True  # C·∫ßn thi·∫øt ƒë·ªÉ truy c·∫≠p th√¥ng tin member v√† role

# T·∫°o bot
bot = commands.Bot(command_prefix='!', intents=intents)

# T·ª´ ƒëi·ªÉn ƒë·ªÉ theo d√µi gi·ªõi h·∫°n t·ªëc ƒë·ªô
rate_limits = {}

# C√°c h·∫±ng s·ªë gi·ªõi h·∫°n t·ªëc ƒë·ªô
RATE_LIMIT = 3  # S·ªë y√™u c·∫ßu t·ªëi ƒëa
TIME_PERIOD = 60  # Trong bao nhi√™u gi√¢y

@bot.event
async def on_ready():
    print(f'Bot ƒë√£ s·∫µn s√†ng. ƒêƒÉng nh·∫≠p d∆∞·ªõi t√™n {bot.user}')
    try:
        synced = await bot.tree.sync()
        print(f'ƒê√£ ƒë·ªìng b·ªô {len(synced)} l·ªánh slash.')
    except Exception as e:
        print(f'L·ªói khi ƒë·ªìng b·ªô l·ªánh: {e}')

@bot.tree.command(name="imagine", description="T·∫°o ·∫£nh t·ª´ prompt v√† model")
@app_commands.describe(
    prompt="M√¥ t·∫£ ·∫£nh b·∫°n mu·ªën t·∫°o",
    model="Ch·ªçn model ƒë·ªÉ t·∫°o ·∫£nh"
)
@app_commands.choices(model=[
    app_commands.Choice(name=model_name, value=model_name) for model_name in VALID_MODELS
])
async def imagine(interaction: discord.Interaction, prompt: str, model: str):
    author = interaction.user
    member_role_name = 'üòÄ Member'  # T√™n c·ªßa role c·∫ßn gi·ªõi h·∫°n t·ªëc ƒë·ªô

    # Ki·ªÉm tra xem ng∆∞·ªùi d√πng c√≥ role 'member' hay kh√¥ng
    member = interaction.guild.get_member(author.id)
    if any(role.name.lower() == member_role_name.lower() for role in member.roles):
        now = time.time()
        user_id = author.id
        user_requests = rate_limits.get(user_id, [])

        # Lo·∫°i b·ªè c√°c y√™u c·∫ßu c≈© h∆°n TIME_PERIOD gi√¢y
        user_requests = [t for t in user_requests if now - t < TIME_PERIOD]

        if len(user_requests) >= RATE_LIMIT:
            await interaction.response.send_message(f"B·∫°n ƒë√£ ƒë·∫°t gi·ªõi h·∫°n {RATE_LIMIT} y√™u c·∫ßu m·ªói ph√∫t.", ephemeral=True)
            return
        else:
            user_requests.append(now)
            rate_limits[user_id] = user_requests

    await interaction.response.defer()  # Tr√¨ ho√£n ph·∫£n h·ªìi

    # B·∫Øt ƒë·∫ßu th·ªùi gian t√≠nh t·ªïng th·ªùi gian t·∫°o ·∫£nh
    start_time = time.time()

    await interaction.followup.send("ƒêang t·∫°o ·∫£nh, vui l√≤ng ch·ªù...")

    # Chu·∫©n b·ªã tham s·ªë cho vi·ªác t·∫°o ·∫£nh
    width = 1024
    height = 1024
    seed = random.randint(0, 999999)
    # M√£ h√≥a URL cho prompt
    encoded_prompt = urllib.parse.quote(prompt)

    # T·∫°o URL y√™u c·∫ßu ·∫£nh
    api_url = f"https://image.pollinations.ai/prompt/{encoded_prompt}?width={width}&height={height}&seed={seed}&nologo=poll&nofeed=yes&model={model}"

    try:
        # G·ª≠i y√™u c·∫ßu t·ªõi API c·ªßa Pollinations
        response = requests.get(api_url)

        # Ki·ªÉm tra xem ph·∫£n h·ªìi c√≥ th√†nh c√¥ng hay kh√¥ng
        if response.status_code == 200:
            # L∆∞u ·∫£nh
            image_filename = f"generated_image_{author.id}.jpg"
            with open(image_filename, 'wb') as f:
                f.write(response.content)

            # L·∫•y th·ªùi gian hi·ªán t·∫°i v√† chuy·ªÉn sang m√∫i gi·ªù Vi·ªát Nam (UTC+7)
            creation_time = (datetime.now() + timedelta(hours=7)).strftime("%d/%m/%Y %H:%M:%S")

            # T√≠nh t·ªïng th·ªùi gian t·∫°o ·∫£nh
            end_time = time.time()
            total_duration = round(end_time - start_time, 2)

            # T·∫°o embed ƒë·ªÉ hi·ªÉn th·ªã th√¥ng tin
            embed = discord.Embed(title="·∫¢nh ƒë∆∞·ª£c t·∫°o th√†nh c√¥ng!", color=0x00ff00)
            embed.add_field(name="üñºÔ∏è Model", value=model, inline=True)
            embed.add_field(name="üìê K√≠ch th∆∞·ªõc", value=f"{width}x{height}", inline=True)
            embed.add_field(name="‚è∞ Th·ªùi gian t·∫°o", value=creation_time, inline=True)
            embed.add_field(name="‚è≥ T·ªïng th·ªùi l∆∞·ª£ng", value=f"{total_duration} gi√¢y", inline=False)
            embed.add_field(name="üí¨ Prompt", value=prompt, inline=False)
            embed.set_image(url=f"attachment://{image_filename}")

            # G·ª≠i file ·∫£nh v√† embed tr·ªü l·∫°i k√™nh Discord
            with open(image_filename, 'rb') as f:
                picture = discord.File(f, filename=image_filename)
                await interaction.followup.send(file=picture, embed=embed)

            # X√≥a file ·∫£nh sau khi g·ª≠i
            os.remove(image_filename)
        else:
            await interaction.followup.send("Kh√¥ng th·ªÉ t·∫°o ·∫£nh. Vui l√≤ng th·ª≠ l·∫°i sau.")
            print(f"L·ªói {response.status_code}: {response.text}")
    except Exception as e:
        await interaction.followup.send("ƒê√£ x·∫£y ra l·ªói trong qu√° tr√¨nh t·∫°o ·∫£nh.")
        print(e)

# Ch·∫°y bot
bot.run(POLLINATIONS_BOT_TOKEN)